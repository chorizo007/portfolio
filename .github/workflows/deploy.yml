name: 🚀 Deploy Angular to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PROJECT_NAME: "mi-portafolio-angular"
  BASE_HREF: "/"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 DEBUG - Verify project structure
        run: |
          echo "=== PROJECT STRUCTURE ==="
          ls -la
          echo "=== DIST FOLDER AFTER BUILD ==="
          npm run build
          ls -la dist/

      - name: 🛠️ Build Angular App
        run: npx ng build ${{ env.PROJECT_NAME }} --configuration production --base-href "${{ env.BASE_HREF }}"

      - name: 🔍 Find exact build path
        id: find-build
        run: |
          if [ -d "dist/PORTFOLIO/browser" ]; then
            echo "BUILD_PATH=dist/PORTFOLIO/browser" >> $GITHUB_OUTPUT
          elif [ -d "dist/PORTFOLIO" ]; then
            echo "BUILD_PATH=dist/PORTFOLIO" >> $GITHUB_OUTPUT
          elif [ -d "dist/browser" ]; then
            echo "BUILD_PATH=dist/browser" >> $GITHUB_OUTPUT
          elif [ -d "dist/mi-portafolio-angular" ]; then
            echo "BUILD_PATH=dist/mi-portafolio-angular" >> $GITHUB_OUTPUT
          else
            echo "❌ ERROR: No build folder found!"
            ls -la dist/
            exit 1
          fi
          echo "Build path: ${{ steps.find-build.outputs.BUILD_PATH }}"

      - name: 🧩 Add .nojekyll file
        run: |
          echo "" > ${{ steps.find-build.outputs.BUILD_PATH }}/.nojekyll
          echo "✅ .nojekyll file created"

      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.find-build.outputs.BUILD_PATH }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: ⚙️ Setup Pages
        uses: actions/configure-pages@v4

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: ✅ Verify deployment
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "🌐 Your site is live at: ${{ steps.deployment.outputs.page_url }}"